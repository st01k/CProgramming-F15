/*
*****************************************************************************************************************
*                                 Name:            Text Analyzer                                                *
*                                 Version:         0.1                                                          *
*                                 Chapter:         7, Assignment (p. 455, #44)                                  *
*                                 Author:          Casey Murphy                                                 *
*                                 Date Created:    6 Oct 15                                                     *
*                                 Last Modified:   6 Oct 15                                                     *
* ------------------------------------------------------------------------------------------------------------- *
*    Menu-driven text file analyzer that finds character count, word count, line count, and sentence count.     *
*****************************************************************************************************************
*/

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <stdbool.h>

#define WHT_SPC\
        (cur == ' ' || cur == '\n' || cur == '\t')

//function declarations
void greeting   (void);
void menu       (FILE* spFile, int cCount, int wCount, int lCount, int sCount);
int  countChars (FILE* spFile);
int  countWords (FILE* spFile);
int  countLines (FILE* spFile);
int  countSent  (FILE* spFile);
void countAll   (FILE* spFile, int* cCount, int* wCount, int* lCount, int* sCount);

int main (void)
{
    FILE* spFile;
    int charCount = 0;
    int wordCount = 0;
    int lineCount = 0;
    int sentCount = 0;

    greeting ();

    if (!(spFile = fopen("TESTFILE.TXT", "r")))
    {
        printf ("Error opening file for reading\n");
        return (1);
    } // if file open error

    menu    (spFile, charCount, wordCount, lineCount, sentCount);
    fclose  (spFile);

    return 0;
} // main

//----------------------------------------------------------------------------
// prints greeting to user
void greeting (void)
{
    printf ("\n\t\tWelcome to the text file analyzer.\n\n");

    return;
}
//----------------------------------------------------------------------------
// menu, switch for options that calls their associated subfunctions
void menu (FILE* spFile, int cCount, int wCount, int lCount, int sCount)
{
    char option;
    bool invalidFlag;

    do
    {
        invalidFlag = false;

        printf ("-----------------------------------------------------------------\n\n");
        printf ("\tC) Count characters in a text file\n");
        printf ("\tW) Count words in a text file\n");
        printf ("\tL) Count lines in a text file\n");
        printf ("\tS) Count sentences in a text file\n");
        printf ("\tA) Count all of the above options in a text file\n");
        printf ("\tQ) Quit\n\n");
        printf ("=================================================================\n");
        printf ("Enter your selection: ");
        scanf  (" %c", &option);
        printf ("=================================================================\n");
//printf("\n***option in menu: %c***\n", option);
        option = tolower (option);
        switch (option)
        {
            case 'c' :  cCount = countChars (spFile);
                        printf ("\n***file chars in switch: %d***\n", cCount);
                        break;
            case 'w' :  wCount = countWords (spFile);
                        printf ("\n***file words in switch: %d***\n", wCount);
                        break;
            case 'l' :  lCount = countLines (spFile);
                        printf ("\n***file lines in switch: %d***\n", lCount);
                        break;
            case 's' :  sCount = countSent (spFile);
                        printf ("\n***file sentences in switch: %d***\n", sCount);
                        break;
            case 'a' :  countAll(spFile, &cCount, &wCount, &lCount, &sCount);
                        printf ("\nchars: %d, words: %d, lines: %d, sentences: %d\n",
                                cCount, wCount, lCount, sCount);
                        break;
            case 'q' :  exit (0);
            default  :  printf ("\nInvalid Response.  Please try again.\n");
                        invalidFlag = true;
                        break;
        } // switch
    } while (invalidFlag);

    return;
}
//----------------------------------------------------------------------------
//  counts characters in a text file
int countChars (FILE* spFile)
{
    int     count = 0;
    char    cur;

    while ((cur = fgetc(spFile)) != EOF)
    {
        count++;
    }

    return count;
}
//----------------------------------------------------------------------------
//  counts words in a text file
int countWords (FILE* spFile)
{
    int  cur;
    int  count = 0;
    char word = 'O';    // for I as words

    while ((cur = fgetc(spFile)) != EOF)
    {
        if (WHT_SPC)
            word = 'O';
        else
            if (word == 'O')
            {
                count++;
                word = 'I';
            } // if
    } // while

    return count;
}
//----------------------------------------------------------------------------
//  counts lines in a text file
int countLines (FILE* spFile)
{
    int curChar;
    int preChar;
    int count = 0;

    while ((curChar = fgetc(spFile)) != EOF)
    {
        if (curChar == '\n')
            count++;
        preChar = curChar;
    } // while

    if (preChar != '\n')
        count++;

    return count;
}
//----------------------------------------------------------------------------
//  counts sentences in a text file
int countSent      (FILE* spFile)
{
    int curChar;
    int count = 0;

    while ((curChar = fgetc(spFile)) != EOF)
    {
        if (curChar == '.')
            count++;
    }
printf ("\n***file chars in counSent: %d***\n", sCount);
    return count;
}
//----------------------------------------------------------------------------
//  counts all in a text file
void countAll   (FILE* spFile, int* cCount, int* wCount, int* lCount, int* sCount)
{
    *cCount = countChars(spFile);
printf ("\n***file chars in countAll: %d***\n", *cCount);
    *wCount = countWords(spFile);
printf ("\n***file words in countAll: %d***\n", *wCount);
    *lCount = countLines(spFile);
printf ("\n***file lines in countAll: %d***\n", *lCount);
    *sCount = countSent(spFile);
printf ("\n***file sentences in countAll: %d***\n\n", *sCount);
printf ("\n***IN countAll - chars: %d, words: %d, lines: %d, sentences: %d***\n", *cCount, *wCount, *lCount, *sCount);


    return;
}
